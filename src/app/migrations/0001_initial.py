# Generated by Django 4.1.7 on 2023-03-28 13:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abonne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.TextField(blank=True, null=True)),
                ('prenom', models.TextField()),
                ('speculation', models.TextField()),
                ('prix', models.CharField(max_length=3)),
                ('stock', models.CharField(max_length=3)),
                ('debut', models.DateField()),
                ('fin', models.DateField()),
                ('adresse', models.TextField(blank=True, null=True)),
                ('contact', models.CharField(max_length=20)),
                ('statut', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('region', models.IntegerField()),
            ],
            options={
                'db_table': 'abonne',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Acteur',
            fields=[
                ('id_acteur', models.AutoField(primary_key=True, serialize=False)),
                ('code_acteur', models.CharField(max_length=30)),
                ('structure', models.CharField(max_length=20)),
                ('categorie', models.TextField()),
                ('sigle', models.CharField(max_length=100)),
                ('nom_acteur', models.TextField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateTimeField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'acteur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgendaPerso',
            fields=[
                ('id_agenda', models.AutoField(primary_key=True, serialize=False)),
                ('expediteur', models.TextField(blank=True, null=True)),
                ('titre', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('all_day', models.IntegerField(blank=True, null=True)),
                ('debut', models.DateTimeField()),
                ('fin', models.DateTimeField()),
                ('couleur', models.CharField(blank=True, max_length=7, null=True)),
                ('lien', models.TextField(blank=True, null=True)),
                ('valider', models.IntegerField()),
                ('type', models.CharField(max_length=7)),
                ('id_personnel', models.TextField()),
                ('date_enregistrement', models.DateTimeField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agenda_perso',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Annee',
            fields=[
                ('annee', models.IntegerField(primary_key=True, serialize=False)),
                ('plan', models.CharField(max_length=30)),
                ('suivi', models.CharField(max_length=30)),
                ('id_personnel', models.TextField()),
                ('date_enregistrement', models.DateField()),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField()),
                ('modifier_par', models.TextField()),
            ],
            options={
                'db_table': 'annee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutreMsg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expediteur', models.TextField(blank=True, null=True)),
                ('msg', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'autre_msg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bulettin',
            fields=[
                ('id_bulletin', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.TextField()),
                ('theme', models.CharField(max_length=11)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('description_bulletin', models.TextField(blank=True, null=True)),
                ('id_personnel', models.CharField(blank=True, max_length=30, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('date_modification', models.DateField(blank=True, null=True)),
                ('etat', models.CharField(blank=True, max_length=30, null=True)),
                ('modifier_par', models.CharField(blank=True, max_length=30, null=True)),
                ('statut', models.IntegerField()),
            ],
            options={
                'db_table': 'bulettin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.TextField()),
                ('prenom', models.TextField()),
                ('contact', models.CharField(blank=True, max_length=30, null=True)),
                ('fonction', models.TextField()),
                ('description', models.TextField()),
                ('region', models.IntegerField()),
                ('adresse', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ca',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategorieProduit',
            fields=[
                ('id_categorie_produit', models.AutoField(primary_key=True, serialize=False)),
                ('code_categorie_produit', models.CharField(max_length=30)),
                ('nom_categorie_produit', models.TextField()),
                ('famille_produit', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'categorie_produit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClasseAge',
            fields=[
                ('id_classe', models.AutoField(primary_key=True, serialize=False)),
                ('classe_age', models.CharField(max_length=30)),
                ('espece_betail', models.TextField()),
            ],
            options={
                'db_table': 'classe_age',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id_client', models.AutoField(primary_key=True, serialize=False)),
                ('nom_client', models.TextField()),
                ('adresse', models.TextField(blank=True, null=True)),
                ('contact', models.TextField(blank=True, null=True)),
                ('localite', models.CharField(blank=True, max_length=100, null=True)),
                ('type_client', models.IntegerField()),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField()),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collecteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.TextField()),
                ('prenom', models.TextField()),
                ('sexe', models.TextField()),
                ('contact', models.CharField(max_length=20)),
                ('adresse', models.TextField()),
                ('relai', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'collecteur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id_commune', models.AutoField(primary_key=True, serialize=False)),
                ('code_commune', models.CharField(max_length=20)),
                ('departement', models.CharField(max_length=20)),
                ('nom_commune', models.TextField()),
                ('abrege_commune', models.CharField(blank=True, max_length=10, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateTimeField()),
                ('etat', models.CharField(blank=True, max_length=10, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'commune',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Connecter',
            fields=[
                ('id_connexion', models.AutoField(primary_key=True, serialize=False)),
                ('personnel', models.CharField(max_length=50)),
                ('session_id', models.TextField(blank=True, null=True)),
                ('date_connexion', models.DateTimeField()),
                ('date_deconnexion', models.DateTimeField()),
                ('date_c', models.DateTimeField()),
            ],
            options={
                'db_table': 'connecter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Debarcadere',
            fields=[
                ('id_debarcadere', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=30)),
                ('nom', models.TextField()),
                ('localite', models.CharField(max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'debarcadere',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id_departement', models.AutoField(primary_key=True, serialize=False)),
                ('code_departement', models.CharField(max_length=20)),
                ('region', models.CharField(max_length=20)),
                ('nom_departement', models.TextField()),
                ('abrege_departement', models.CharField(blank=True, max_length=10, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateTimeField()),
                ('etat', models.CharField(blank=True, max_length=10, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'departement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id_district', models.AutoField(primary_key=True, serialize=False)),
                ('sous_prefecture', models.IntegerField()),
                ('nom_district', models.TextField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'district',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Enquete',
            fields=[
                ('id_enquete', models.AutoField(primary_key=True, serialize=False)),
                ('marche', models.CharField(max_length=30)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.IntegerField()),
                ('statut', models.CharField(blank=True, max_length=30, null=True)),
                ('observation', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnqueteCollecte',
            fields=[
                ('id_enquete', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_fiche', models.CharField(max_length=100)),
                ('marche', models.CharField(max_length=100)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.CharField(max_length=30)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete_collecte',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnqueteConsommation',
            fields=[
                ('id_enquete', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_fiche', models.CharField(max_length=100)),
                ('marche', models.CharField(max_length=100)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.CharField(max_length=30)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete_consommation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnqueteElevage',
            fields=[
                ('id_enquete', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_fiche', models.CharField(max_length=100)),
                ('marche', models.CharField(max_length=100)),
                ('periodicite', models.CharField(blank=True, max_length=255, null=True)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.CharField(max_length=30)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete_elevage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnqueteExportation',
            fields=[
                ('id_enquete', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_fiche', models.CharField(max_length=100)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.CharField(max_length=30)),
                ('designation', models.TextField()),
                ('quantite', models.FloatField(blank=True, null=True)),
                ('prix', models.FloatField()),
                ('unite', models.IntegerField()),
                ('provenance', models.IntegerField()),
                ('destination', models.IntegerField()),
                ('nom_poste', models.IntegerField()),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete_exportation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnqueteGrossiste',
            fields=[
                ('id_enquete', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_fiche', models.CharField(max_length=100)),
                ('marche', models.CharField(max_length=100)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.CharField(max_length=30)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete_grossiste',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnqueteImportation',
            fields=[
                ('id_enquete', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_fiche', models.CharField(max_length=100)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.CharField(max_length=30)),
                ('designation', models.TextField()),
                ('quantite', models.FloatField(blank=True, null=True)),
                ('prix', models.FloatField()),
                ('unite', models.IntegerField()),
                ('provenance', models.IntegerField()),
                ('destination', models.IntegerField()),
                ('nom_poste', models.IntegerField()),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete_importation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnquetePeche',
            fields=[
                ('id_enquete', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_fiche', models.CharField(max_length=100)),
                ('debarcadere', models.CharField(max_length=100)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.CharField(max_length=30)),
                ('nbr_barques_rentres_jour', models.IntegerField()),
                ('volume_poissons_peches', models.FloatField(blank=True, null=True)),
                ('principale_espece_peche', models.IntegerField(blank=True, null=True)),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete_peche',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnqueteStocksMarchandsProduitsVegetauxLocaux',
            fields=[
                ('id_enquete', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_fiche', models.CharField(max_length=100)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.CharField(max_length=30)),
                ('localite', models.CharField(max_length=20)),
                ('nom_prenom', models.TextField(blank=True, null=True)),
                ('telephone', models.CharField(blank=True, max_length=255, null=True)),
                ('nature_produit', models.TextField(blank=True, null=True)),
                ('unite', models.FloatField(blank=True, null=True)),
                ('quantite', models.FloatField(blank=True, null=True)),
                ('cout', models.FloatField(blank=True, null=True)),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete_stocks_marchands_produits_vegetaux_locaux',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnqueteStocksProduitsAvicolesLocauxFermesAmeliorees',
            fields=[
                ('id_enquete', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_fiche', models.CharField(max_length=100)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.CharField(max_length=30)),
                ('localite', models.CharField(max_length=20)),
                ('ferme', models.TextField(blank=True, null=True)),
                ('telephone', models.CharField(blank=True, max_length=255, null=True)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('nbr_pondeuses_presentes', models.FloatField(blank=True, null=True)),
                ('nbr_poulets_chair_presents', models.FloatField(blank=True, null=True)),
                ('nbr_oeufs_produits', models.FloatField(blank=True, null=True)),
                ('nbr_poulets_reforme_vendues', models.FloatField(blank=True, null=True)),
                ('nbr_poulets_chair_vendus', models.FloatField(blank=True, null=True)),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete_stocks_produits_avicoles_locaux_fermes_ameliorees',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnqueteStocksSemencesVegetales',
            fields=[
                ('id_enquete', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_fiche', models.CharField(max_length=100)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.CharField(max_length=30)),
                ('localite', models.CharField(max_length=20)),
                ('nom_prenom', models.TextField(blank=True, null=True)),
                ('telephone', models.CharField(blank=True, max_length=255, null=True)),
                ('espece', models.TextField(blank=True, null=True)),
                ('variete', models.TextField(blank=True, null=True)),
                ('quantite', models.FloatField(blank=True, null=True)),
                ('cout', models.FloatField(blank=True, null=True)),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete_stocks_semences_vegetales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnqueteTransfrontalier',
            fields=[
                ('id_enquete', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_fiche', models.CharField(max_length=100)),
                ('date_enquete', models.DateField()),
                ('collecteur', models.CharField(max_length=30)),
                ('designation', models.TextField()),
                ('quantite', models.FloatField(blank=True, null=True)),
                ('prix', models.FloatField()),
                ('unite', models.IntegerField()),
                ('provenance', models.IntegerField()),
                ('destination', models.IntegerField(blank=True, null=True)),
                ('nom_poste', models.IntegerField()),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enquete_transfrontalier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Enqueteur',
            fields=[
                ('id_enqueteur', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=30)),
                ('nom', models.TextField()),
                ('prenom', models.TextField()),
                ('sexe', models.TextField()),
                ('contact', models.CharField(max_length=20)),
                ('localite', models.CharField(max_length=30)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('superviseur', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('app_profil', models.CharField(blank=True, max_length=255, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enqueteur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnvoiMsg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.TextField(blank=True, null=True)),
                ('collecteur', models.IntegerField(blank=True, null=True)),
                ('relai', models.IntegerField(blank=True, null=True)),
                ('abonne', models.IntegerField(blank=True, null=True)),
                ('radio', models.IntegerField(blank=True, null=True)),
                ('ca', models.IntegerField(blank=True, null=True)),
                ('uropc', models.IntegerField(blank=True, null=True)),
                ('msg', models.TextField()),
                ('date', models.DateTimeField()),
                ('statut', models.CharField(blank=True, max_length=11, null=True)),
            ],
            options={
                'db_table': 'envoi_msg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EspeceElevage',
            fields=[
                ('id_espece_elevage', models.AutoField(primary_key=True, serialize=False)),
                ('espece_elevage', models.CharField(max_length=100)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'espece_elevage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EspecePeche',
            fields=[
                ('id_espece_peche', models.AutoField(primary_key=True, serialize=False)),
                ('espece_peche', models.CharField(max_length=100)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'espece_peche',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EtatCorporel',
            fields=[
                ('id_etat', models.AutoField(primary_key=True, serialize=False)),
                ('etat_corporel', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'etat_corporel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FamilleProduit',
            fields=[
                ('id_famille_produit', models.AutoField(primary_key=True, serialize=False)),
                ('code_famille_produit', models.CharField(blank=True, max_length=30, null=True)),
                ('nom_famille_produit', models.TextField()),
                ('affichage_ecran', models.IntegerField()),
                ('date_enregistrement', models.DateField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'famille_produit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FicheCollecte',
            fields=[
                ('id_fiche', models.AutoField(primary_key=True, serialize=False)),
                ('enquete', models.IntegerField()),
                ('statut', models.CharField(blank=True, max_length=30, null=True)),
                ('observation', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fiche_collecte',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fonction',
            fields=[
                ('id_fonction', models.AutoField(primary_key=True, serialize=False)),
                ('fonction', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('service', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fonction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormeProduit',
            fields=[
                ('id_forme_produit', models.AutoField(primary_key=True, serialize=False)),
                ('code_forme_produit', models.CharField(max_length=30)),
                ('nom_forme_produit', models.TextField()),
                ('produit_concerne', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'forme_produit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id_fournisseur', models.AutoField(primary_key=True, serialize=False)),
                ('nom_fournisseur', models.TextField()),
                ('adresse', models.TextField(blank=True, null=True)),
                ('contact', models.TextField(blank=True, null=True)),
                ('localite', models.CharField(blank=True, max_length=100, null=True)),
                ('type_fournisseur', models.IntegerField()),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField()),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fournisseur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Grossiste',
            fields=[
                ('id_grossiste', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=100)),
                ('nom', models.TextField()),
                ('contact', models.CharField(max_length=20)),
                ('localite', models.CharField(max_length=30)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'grossiste',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupeTache',
            fields=[
                ('id_groupe_tache', models.AutoField(primary_key=True, serialize=False)),
                ('jalon', models.IntegerField()),
                ('id_activite', models.IntegerField()),
                ('code_activite', models.CharField(max_length=30)),
                ('annee', models.IntegerField()),
                ('code_tache', models.IntegerField()),
                ('proportion', models.FloatField(blank=True, null=True)),
                ('proportion_reelle', models.FloatField()),
                ('entite', models.IntegerField()),
                ('intitule_tache', models.TextField(blank=True, null=True)),
                ('debut', models.DateField(blank=True, null=True)),
                ('fin', models.DateField(blank=True, null=True)),
                ('periode', models.TextField(blank=True, null=True)),
                ('cout_tache', models.FloatField(blank=True, null=True)),
                ('n_lot', models.IntegerField()),
                ('date_reelle', models.DateField(blank=True, null=True)),
                ('observation', models.TextField(blank=True, null=True)),
                ('projet', models.CharField(max_length=30)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
                ('responsable', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'groupe_tache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndicateurElevage',
            fields=[
                ('id_indicateur_tache', models.AutoField(primary_key=True, serialize=False)),
                ('intitule_indicateur_tache', models.TextField(blank=True, null=True)),
                ('unite', models.CharField(blank=True, max_length=30, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'indicateur_elevage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndicateursElevage',
            fields=[
                ('id_indicateur', models.AutoField(primary_key=True, serialize=False)),
                ('intitule_indicateur', models.TextField()),
                ('unite_indicateur', models.IntegerField()),
            ],
            options={
                'db_table': 'indicateurs_elevage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InfoSolde',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('statut', models.IntegerField()),
            ],
            options={
                'db_table': 'info_solde',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Localite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.TextField()),
                ('region', models.IntegerField()),
            ],
            options={
                'db_table': 'localite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Magasin',
            fields=[
                ('id_magasin', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.TextField()),
                ('code', models.CharField(max_length=30, unique=True)),
                ('localite', models.IntegerField()),
                ('collecteur', models.IntegerField()),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('capacite', models.FloatField()),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'magasin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Marche',
            fields=[
                ('id_marche', models.AutoField(primary_key=True, serialize=False)),
                ('nom_marche', models.TextField()),
                ('type_marche', models.TextField()),
                ('code_marche', models.CharField(max_length=30)),
                ('jour_marche', models.TextField()),
                ('collecteur', models.TextField()),
                ('localite', models.CharField(max_length=30)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('superficie', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_personnel', models.CharField(blank=True, max_length=100, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('modifier_par', models.CharField(blank=True, max_length=100, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'marche',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NiveauApprovisionement',
            fields=[
                ('id_niveau_approvisionement', models.AutoField(primary_key=True, serialize=False)),
                ('niveau_approvisionement', models.CharField(max_length=100)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'niveau_approvisionement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parametrage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projet', models.TextField()),
                ('pays', models.TextField()),
                ('adresse', models.TextField(blank=True, null=True)),
                ('contact', models.TextField(blank=True, null=True)),
                ('slogan', models.TextField()),
                ('activer_stock', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'parametrage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('id_pays', models.AutoField(primary_key=True, serialize=False)),
                ('pays', models.CharField(max_length=100)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pays',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaysFrontalier',
            fields=[
                ('id_pays', models.AutoField(primary_key=True, serialize=False)),
                ('pays', models.CharField(max_length=100)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pays_frontalier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaysProduit',
            fields=[
                ('id_pays_produit', models.AutoField(primary_key=True, serialize=False)),
                ('code_pays_produit', models.CharField(max_length=30)),
                ('nom_pays_produit', models.TextField()),
                ('region_produit', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'pays_produit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('n', models.AutoField(db_column='N', primary_key=True, serialize=False)),
                ('id_personnel', models.CharField(max_length=200, unique=True)),
                ('titre', models.CharField(blank=True, max_length=30, null=True)),
                ('pass_field', models.TextField(db_column='pass')),
                ('nom', models.TextField()),
                ('prenom', models.TextField()),
                ('app_profil', models.CharField(blank=True, max_length=1000, null=True)),
                ('contact', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.CharField(blank=True, max_length=60, null=True)),
                ('fonction', models.TextField()),
                ('description_fonction', models.TextField(blank=True, null=True)),
                ('avatar', models.TextField(blank=True, null=True)),
                ('niveau', models.IntegerField()),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('date_modification', models.DateField(blank=True, null=True)),
                ('statut', models.IntegerField()),
            ],
            options={
                'db_table': 'personnel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Postes',
            fields=[
                ('id_postes', models.AutoField(primary_key=True, serialize=False)),
                ('postes', models.CharField(max_length=255)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prefecture',
            fields=[
                ('id_prefecture', models.AutoField(primary_key=True, serialize=False)),
                ('region', models.IntegerField()),
                ('nom_prefecture', models.TextField()),
                ('zoneopp', models.TextField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prefecture',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrixMarcheBordChamp',
            fields=[
                ('id_fiche', models.AutoField(primary_key=True, serialize=False)),
                ('produit', models.CharField(max_length=30)),
                ('unite', models.TextField()),
                ('poids_unitaire', models.FloatField()),
                ('montant_achat', models.FloatField()),
                ('prix_fg_kg', models.FloatField()),
                ('localite_origine', models.IntegerField()),
                ('distance_origine_marche', models.FloatField()),
                ('montant_transport', models.FloatField()),
                ('etat_route', models.CharField(max_length=100)),
                ('client_principal', models.IntegerField()),
                ('fournisseur_principal', models.IntegerField()),
                ('quantite_collecte', models.FloatField()),
                ('type_detaillant', models.CharField(max_length=100)),
                ('statut', models.CharField(blank=True, max_length=30, null=True)),
                ('observation', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prix_marche_bord_champ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrixMarcheCollecte',
            fields=[
                ('id_fiche', models.BigAutoField(primary_key=True, serialize=False)),
                ('enquete', models.BigIntegerField()),
                ('produit', models.CharField(max_length=100)),
                ('unite', models.IntegerField()),
                ('poids_unitaire', models.FloatField()),
                ('montant_achat', models.FloatField()),
                ('prix_fg_kg', models.FloatField()),
                ('localite_origine', models.CharField(max_length=100)),
                ('distance_origine_marche', models.FloatField()),
                ('montant_transport', models.FloatField()),
                ('etat_route', models.TextField()),
                ('quantite_collecte', models.FloatField()),
                ('client_principal', models.IntegerField()),
                ('fournisseur_principal', models.IntegerField()),
                ('niveau_approvisionement', models.IntegerField()),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('statut', models.IntegerField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prix_marche_collecte',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrixMarcheConsommation',
            fields=[
                ('id_fiche', models.BigAutoField(primary_key=True, serialize=False)),
                ('enquete', models.BigIntegerField()),
                ('produit', models.CharField(max_length=100)),
                ('unite', models.IntegerField()),
                ('poids_unitaire', models.FloatField()),
                ('prix_mesure', models.FloatField()),
                ('prix_kg_litre', models.FloatField()),
                ('niveau_approvisionement', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('document', models.TextField(blank=True, null=True)),
                ('app_mobile', models.IntegerField()),
                ('statut', models.IntegerField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prix_marche_consommation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrixMarcheElevage',
            fields=[
                ('id_fiche', models.BigAutoField(primary_key=True, serialize=False)),
                ('enquete', models.BigIntegerField()),
                ('bovins_stock_de_base', models.FloatField(blank=True, null=True)),
                ('ovins_stock_de_base', models.FloatField(blank=True, null=True)),
                ('caprins_stock_de_base', models.FloatField(blank=True, null=True)),
                ('bovins_qty_debarque', models.FloatField(blank=True, null=True)),
                ('ovins_qty_debarque', models.FloatField(blank=True, null=True)),
                ('caprins_qty_debarque', models.FloatField(blank=True, null=True)),
                ('bovins_stock_du_soir', models.FloatField(blank=True, null=True)),
                ('ovins_stock_du_soir', models.FloatField(blank=True, null=True)),
                ('caprins_stock_du_soir', models.FloatField(blank=True, null=True)),
                ('bovins_qty_vendu', models.FloatField(blank=True, null=True)),
                ('ovins_qty_vendu', models.FloatField(blank=True, null=True)),
                ('caprins_qty_vendu', models.FloatField(blank=True, null=True)),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('statut', models.IntegerField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prix_marche_elevage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrixMarcheElevageDetail',
            fields=[
                ('id_fiche', models.BigAutoField(primary_key=True, serialize=False)),
                ('enquete', models.BigIntegerField()),
                ('vendeur', models.TextField(blank=True, null=True)),
                ('localite_animaux_debarque', models.CharField(max_length=100)),
                ('espece', models.IntegerField()),
                ('nombre', models.FloatField(blank=True, null=True)),
                ('vendus', models.FloatField()),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('statut', models.IntegerField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prix_marche_elevage_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrixMarcheElevageEchantillon',
            fields=[
                ('id_fiche', models.BigAutoField(primary_key=True, serialize=False)),
                ('enquete', models.BigIntegerField()),
                ('espece', models.IntegerField()),
                ('classe_age', models.IntegerField()),
                ('prix', models.FloatField(blank=True, null=True)),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('statut', models.IntegerField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prix_marche_elevage_echantillon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrixMarcheElevageIndicateur',
            fields=[
                ('id_fiche', models.BigAutoField(primary_key=True, serialize=False)),
                ('enquete', models.BigIntegerField()),
                ('indicateur', models.IntegerField()),
                ('espece', models.IntegerField()),
                ('nombre', models.FloatField(blank=True, null=True)),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('statut', models.IntegerField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prix_marche_elevage_indicateur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrixMarcheGrossiste',
            fields=[
                ('id_fiche', models.BigAutoField(primary_key=True, serialize=False)),
                ('enquete', models.BigIntegerField(blank=True, null=True)),
                ('grossiste', models.CharField(blank=True, max_length=100, null=True)),
                ('produit', models.CharField(max_length=100)),
                ('unite_stock', models.IntegerField()),
                ('nombre_unite_stock', models.FloatField()),
                ('poids_moyen_unite_stock', models.FloatField()),
                ('poids_stock', models.FloatField()),
                ('unite_achat', models.IntegerField()),
                ('nombre_unite_achat', models.FloatField()),
                ('poids_moyen_unite_achat', models.FloatField()),
                ('poids_total_achat', models.FloatField()),
                ('localite_achat', models.CharField(max_length=100)),
                ('fournisseur_achat', models.IntegerField()),
                ('unite_vente', models.IntegerField()),
                ('nombre_unite_vente', models.FloatField()),
                ('poids_moyen_unite_vente', models.FloatField()),
                ('poids_total_unite_vente', models.FloatField()),
                ('prix_unitaire_vente', models.FloatField()),
                ('client_vente', models.IntegerField()),
                ('localite_vente', models.CharField(max_length=100)),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('statut', models.IntegerField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prix_marche_grossiste',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrixMarchePecheEchantillon',
            fields=[
                ('id_fiche', models.BigAutoField(primary_key=True, serialize=False)),
                ('enquete', models.BigIntegerField()),
                ('espece', models.IntegerField()),
                ('um', models.IntegerField(blank=True, null=True)),
                ('poids', models.FloatField(blank=True, null=True)),
                ('pm', models.FloatField(blank=True, null=True)),
                ('prix', models.FloatField(blank=True, null=True)),
                ('app_mobile', models.IntegerField()),
                ('observation', models.TextField(blank=True, null=True)),
                ('statut', models.IntegerField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prix_marche_peche_echantillon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id_produit', models.AutoField(primary_key=True, serialize=False)),
                ('code_produit', models.TextField(blank=True, null=True)),
                ('nom_produit', models.TextField()),
                ('famille_produit', models.IntegerField()),
                ('affichage_ecran', models.IntegerField()),
                ('date_enregistrement', models.DateField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'produit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Projet',
            fields=[
                ('id_projet', models.AutoField(primary_key=True, serialize=False)),
                ('structure', models.CharField(max_length=10)),
                ('code_projet', models.CharField(max_length=10)),
                ('sigle_projet', models.TextField(blank=True, null=True)),
                ('annee_debut', models.IntegerField(blank=True, null=True)),
                ('annee_fin', models.IntegerField(blank=True, null=True)),
                ('ugl', models.TextField(blank=True, null=True)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('contact', models.TextField(blank=True, null=True)),
                ('intitule_projet', models.TextField()),
                ('master', models.IntegerField()),
                ('actif', models.IntegerField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'projet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id_region', models.AutoField(primary_key=True, serialize=False)),
                ('code_region', models.CharField(max_length=30)),
                ('nom_region', models.TextField()),
                ('abrege_region', models.CharField(max_length=30)),
                ('region_naturelle', models.IntegerField(blank=True, null=True)),
                ('couleur', models.TextField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionNaturelle',
            fields=[
                ('id_region_naturelle', models.AutoField(primary_key=True, serialize=False)),
                ('nom_region_naturelle', models.TextField()),
            ],
            options={
                'db_table': 'region_naturelle',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionProduit',
            fields=[
                ('id_region_produit', models.AutoField(primary_key=True, serialize=False)),
                ('code_region_produit', models.CharField(blank=True, max_length=30, null=True)),
                ('nom_region_produit', models.TextField()),
                ('forme_concerne', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField()),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'region_produit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RucheSync',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.IntegerField()),
                ('code', models.TextField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateTimeField()),
                ('etat', models.IntegerField()),
            ],
            options={
                'db_table': 'ruche_sync',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Situation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idid', models.IntegerField()),
                ('contact', models.CharField(max_length=20)),
                ('nombre', models.IntegerField()),
                ('date', models.DateField()),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'situation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SousPrefecture',
            fields=[
                ('id_sous_prefecture', models.AutoField(primary_key=True, serialize=False)),
                ('prefecture', models.IntegerField()),
                ('nom_sous_prefecture', models.TextField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('etat', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sous_prefecture',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id_structure', models.AutoField(primary_key=True, serialize=False)),
                ('code_structure', models.CharField(max_length=10, unique=True)),
                ('nom_structure', models.TextField()),
                ('sigle', models.CharField(blank=True, max_length=20, null=True)),
                ('slogan', models.TextField(blank=True, null=True)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('contact', models.TextField()),
                ('info_plus', models.TextField(blank=True, null=True)),
                ('logo', models.TextField(blank=True, null=True)),
                ('service', models.TextField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateTimeField()),
                ('date_modification', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
                ('statut', models.IntegerField()),
            ],
            options={
                'db_table': 'structure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test2',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('titre1', models.TextField()),
                ('titre2', models.CharField(blank=True, max_length=30, null=True)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'test_2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeDetaillant',
            fields=[
                ('id_type_detaillant', models.AutoField(primary_key=True, serialize=False)),
                ('type_detaillant', models.CharField(max_length=100)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'type_detaillant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ugl',
            fields=[
                ('id_ugl', models.AutoField(primary_key=True, serialize=False)),
                ('structure', models.CharField(max_length=10)),
                ('code_ugl', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('nom_ugl', models.TextField()),
                ('abrege_ugl', models.CharField(blank=True, max_length=10, null=True)),
                ('region_concerne', models.TextField(blank=True, null=True)),
                ('chef_lieu', models.CharField(max_length=11)),
                ('couleur', models.CharField(max_length=10)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateTimeField()),
                ('etat', models.CharField(blank=True, max_length=10, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ugl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UniteMesure',
            fields=[
                ('id_unite', models.AutoField(primary_key=True, serialize=False)),
                ('nom_unite', models.CharField(max_length=100)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField()),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('poids_indicatif', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'unite_mesure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UnitePeche',
            fields=[
                ('id_unite_peche', models.AutoField(primary_key=True, serialize=False)),
                ('unite_peche', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'unite_peche',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id_village', models.AutoField(primary_key=True, serialize=False)),
                ('code_village', models.CharField(max_length=20)),
                ('commune', models.CharField(max_length=20)),
                ('nom_village', models.TextField()),
                ('abrege_village', models.CharField(blank=True, max_length=10, null=True)),
                ('homme', models.IntegerField(blank=True, null=True)),
                ('femme', models.IntegerField(blank=True, null=True)),
                ('jeune', models.IntegerField(blank=True, null=True)),
                ('menage', models.IntegerField(blank=True, null=True)),
                ('id_personnel', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateTimeField()),
                ('etat', models.CharField(blank=True, max_length=10, null=True)),
                ('modifier_par', models.TextField(blank=True, null=True)),
                ('modifier_le', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'village',
                'managed': False,
            },
        ),
    ]
